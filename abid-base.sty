% We define all custom style related instructions for formating that are common to personal academic projects of Abid H. Mujtaba

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{abid-base}[2015/09/08]

% Declare all the packages used

\usepackage[margin=0.75in]{geometry}        % Specify the margins of the page
\usepackage[parfill]{parskip}               % By default new paragraphs will NOT have indentation on the first line.
\usepackage{amsmath}
\usepackage{enumerate}                      % Gives access to lower-case roman numerals for enumeration
%\usepackage{gensymb}                        % Used to get access to the \degree symbol - Part of the 'was' bundle/package in tex-live
\usepackage{tabularx}
\usepackage{keycommand}             % For defining commands with key-value pairs
\usepackage[per-mode=symbol]{siunitx}
\usepackage{pgfplots}
\usepackage{tikz}
\usepackage{tikz-dimline}           % Allows one to draw dimension lines in a diagram. Package cloned from https://github.com/abid-mujtaba/tikz-dimline edited slightly and placed in ~/texmf/tex/latex/.
\usepackage{tkz-euclide}           % For drawing graphs and coordinate planes
%\usepackage{tikz-helpgrid}          % Allows one to draw a light-colored grid over the diagram for aiding in element placement
\usepackage[american]{circuitikz}
\usepackage{pgffor}


\usetikzlibrary{calc}
% Tikz commands for externalizing images. This speeds up compilation.
\usetikzlibrary{external}

% Since this package will be part of the static preamble we do NOT add the \tikzexternalize command and the \tikzset for external/system call here. They will become part of the dynamic preamblej


\newcommand{\beq}{\begin{equation}}
\newcommand{\eeq}{\end{equation}}

\newcommand{\beqn}{\begin{equation*}}           % Equation environment without numbering
\newcommand{\eeqn}{\end{equation*}}

\newcommand{\beqsn}{\begin{equation*}\begin{aligned}}
\newcommand{\eeqsn}{\end{aligned}\end{equation*}}

\newcommand{\beqc}{\begin{equation}\begin{gathered}}
\newcommand{\eeqc}{\end{gathered}\end{equation}}

\newcommand{\beqcn}{\begin{equation*}\begin{gathered}}
\newcommand{\eeqcn}{\end{gathered}\end{equation*}}

\renewcommand{\arraystretch}{1.5}       % Increase row height of all tables

\newcommand{\paren}[1]{\left( #1 \right)}       % An environment that places its contents inside a pair of parentheses

\newcommand{\imply}{\,\, \Rightarrow \,\,}

% A shortcut for place-holder text where diagram is needed
\newcommand{\diag}{\vspace{\baselineskip}\begin{center}\textbf{INSERT DIAGRAM}\end{center}}

% Custom environment for tables incorporating the standard setup. Using this one can simply use \begin{ctablet}{| c | c |} ... \cend{ctable}
\newenvironment{ctable}{
    \begin{table}[h]
    \centering
    \begin{tabular}
    }{
    \end{tabular}
    \end{table}
}

% Command for formating table headers that contain units
\newcommand{\tH}[2]{$#1$ (#2)}
\newcommand{\tHW}[3]{\makebox[#1]{$#2$ (#3)}}      % We use a makebox to make the header have the specified width (#1)

% Shortcuts for units
\newcommand{\cm}{\si{\centi \metre}}
\renewcommand{\sec}{\si{\second}}
\newcommand{\gpcc}{\si{\gram \per \cubic \centi \metre}}
\newcommand{\cmpss}{\si{\centi\metre \per \second \squared}}
\newcommand{\quantity}[2]{$#1$~$\si{#2}$}       % Use this command to specify a quantity with units e.g. \quantity{30}{\second} with print out 30 s. Note the use of '~' as a non-breaking space which ensures that the number and its unit are always on the same line (never split across lines)

% Custom command for generating drawings that can be placed where needed
% This creates the \newdrawing command which in turn generates a \newkeycommand
% The first argument to \newdrawing is the name of the command to be generated
% The second argument is all of the \draw arguments that comprise the drawing
% Note how we use \newkeycommand to introduct the shift, scale and rotate keys with sensible defaults
%
% Example: \newdrawing{\cylinder}{<draw commands>} allows one to issue later on \cylinder[xhift=2,scale=0.5,rotate=45] which draws the object defined with \cylinder to be shifted, scaled and rotated as specified
%
% NOTE: The (0,0) coordinate of the drawing defined will serve as the anchor point of the defined object. All shifting, rotation and scaling will occur about this point so it should be defined with care

\newcommand{\newdrawing}[2]{

   \newkeycommand{#1}[xshift=0,yshift=0,scale=1,rotate=0]{

      \begin{scope}[shift={(\commandkey{xshift}, \commandkey{yshift})}, scale=\commandkey{scale}, rotate=\commandkey{rotate}]
         #2
      \end{scope}
   }
}

% Command for entering a single empty line
\newcommand{\eline}[1][1]{\vspace{#1\baselineskip}}
